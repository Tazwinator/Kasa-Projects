<link href="css/custom/movieItem.css" rel="stylesheet" />  

@if (MovieData?.Count() > 0 && formattedMovie == true)
{
    <div class="container">
        <ul class="list-group">
            @foreach (MovieModel movie in MovieData)
            {   
                <li class="list-group-item">
                    <a href="/movie/@movie.Id">
                    
                        <div class="container">

                            <div class="row">

                                <div class="col-4">
                                    @if (movie.PosterPath == null)
                                    {
                                        <img class="movieColumnImg" src="/OtherImgs/posterPlaceholder.jpg" alt="..."/> 
                                    }
                                    else 
                                    {
                                        <img class="movieColumnImg" src="@($"https://www.themoviedb.org/t/p/original{movie.PosterPath}")" alt="..."/>                
                                    }
                                    
                                </div>

                                <div class="col-8">
                                    <div class="d-inline-block">
                                        <h3>@movie.Title</h3>
                                        <p>@(movie.Overview)...</p>
                                    
                                    </div>
                                </div>

                            </div>

                        </div>          
                    </a>
                </li>
            }
        </ul>
    </div>
    
}


@code {

    [Parameter]
    public List<MovieModel> MovieData { get; set; }

    [Inject]
    private HttpClient Http { get; set; }

    [Inject]
    IConfiguration Configuration { get; set; }

    private string moviePosterPath { get; set; }

    private bool formattedMovie { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        try
        {

            foreach (MovieModel movie in MovieData)
            {
                
                var Result = await Http.GetAsync($"https://api.themoviedb.org/3/movie/{movie.ImdbId}?api_key={Configuration["externalTmdbApiKey"]}");

                if (Result.IsSuccessStatusCode)
                {
                    JsonMovie jsonMovieResult = await Result.Content.ReadFromJsonAsync<JsonMovie>();

                    movie.PosterPath = jsonMovieResult.poster_path;
                }

                if (movie.Overview.Length > 100)
                {
                    movie.Overview = movie.Overview.Substring(0, 100);
                }
                
            }

            formattedMovie = true;

        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"Error: {ex}");
        }
        

    }
}
