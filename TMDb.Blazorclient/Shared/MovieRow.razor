
<div class="col-12">

    <div id="carouselIndicators" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false">

      <div class="carousel-indicators">
        <button type="button" data-bs-target="#carouselIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#carouselIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#carouselIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
        <button type="button" data-bs-target="#carouselIndicators" data-bs-slide-to="3" aria-label="Slide 4"></button>
        <button type="button" data-bs-target="#carouselIndicators" data-bs-slide-to="4" aria-label="Slide 5"></button>
      </div>

      <div class="carousel-inner">
  
        @{CheckIndexNull(0);}
        @if (IndexNullBools["index0NotNull"])
        {
            <div class="carousel-item active">
            @foreach (MovieModel movie in MovieRowMovieData[0])
            {
                <MovieItem Movie="movie" />
            }
            </div>
        }
          
        @{CheckIndexNull(1);}
        @if (IndexNullBools["index1NotNull"])
        {
            <div class="carousel-item">
            @foreach (MovieModel movie in MovieRowMovieData[1])
            {
                <MovieItem Movie="movie" />
            }
            </div>
        }
           
       @{CheckIndexNull(2);}
        @if (IndexNullBools["index2NotNull"])
        {
            <div class="carousel-item">
            @foreach (MovieModel movie in MovieRowMovieData[2])
            {
                <MovieItem Movie="movie" />
            }
            </div>
        }
             
        @{CheckIndexNull(3);}
        @if (IndexNullBools["index3NotNull"])
        {
            <div class="carousel-item">
            @foreach (MovieModel movie in MovieRowMovieData[3])
            {
                <MovieItem Movie="movie" />
            }
            </div>
        }

        @{CheckIndexNull(4);}
        @if (IndexNullBools["index4NotNull"])
        {
            <div class="carousel-item">
            @foreach (MovieModel movie in MovieRowMovieData[4])
            {
                <MovieItem Movie="movie" />
            }
            </div>
        }

        
      </div>

      <button class="carousel-control-prev" type="button" data-bs-target="#carouselIndicators" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>

      <button class="carousel-control-next" type="button" data-bs-target="#carouselIndicators" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>

    </div>

</div>


@code {

    [Parameter]
    public List<MovieModel> MovieData { get; set; }

    private List<List<MovieModel>> MovieRowMovieData = new List<List<MovieModel>>();

    /// <summary>
    /// The Field that determines the size of the amount of movies in each movie Row.
    /// </summary>
    private int movieRowSize = 4;

    private Dictionary<string, bool> IndexNullBools = new();

    private void CheckIndexNull(int index)
    {
        if(MovieRowMovieData.ElementAtOrDefault(index) != null)
        {
            IndexNullBools[$"index{index}NotNull"]  = true; 
        }
    }

    protected override void OnParametersSet()
    {
        // Splits the List<MovieModel> into smaller "Lists within a list" depending on movieRowSize.
        for (int i = 0; i < MovieData.Count; i += movieRowSize) 
        { 
            MovieRowMovieData.Add(MovieData.GetRange(i, Math.Min(movieRowSize, MovieData.Count - i)));
        }

        if (IndexNullBools.Count == 0)
        {
            for (int i = 0; i < 5; i++) 
            {
                IndexNullBools.Add(string.Format($"index{i}NotNull"), false);
            }
        }
    }
}
