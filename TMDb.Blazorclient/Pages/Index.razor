@page "/"


<!-- Section-->
<section class="container-fluid container-lg">
    @if (receivedMovies)
    {
        <HomepageBanner/>
        <div class="">
            <div class="row mb-0">
                <MovieRow MovieData="LatestReleases" MovieRowNum="1" title="Latest Releases"/>
            </div>

            <div class="row mb-0">
                <MovieRow MovieData="HighestRated" MovieRowNum="2" title="Highest Rated of 2016"/>
            </div>

            <div class="row mb-0">
                <MovieRow MovieData="UpAndComing" MovieRowNum="3" title="Up And Coming"/>
            </div>
        </div>
    }
    else 
    {
        <LoadingScreen/>
    }

</section>

@code{

    [Inject]
    private HttpClient Http { get; set; }

    [Inject]
    NavigationManager NavManager { get; set; }

    [Inject]
    IConfiguration Configuration { get; set; }

    // Movie Object Lists
    private List<MovieModel> HighestRated { get; set; }

    private List<MovieModel> LatestReleases { get; set; }

    private List<MovieModel> UpAndComing { get; set; }


    private bool receivedMovies = false;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            HighestRated = await Http.GetFromJsonAsync<List<MovieModel>>($"{Configuration["apiUrl"]}/home/highestRatedLastYear");
            LatestReleases = await Http.GetFromJsonAsync<List<MovieModel>>($"{Configuration["apiUrl"]}/home/latestReleases");
            UpAndComing = await Http.GetFromJsonAsync<List<MovieModel>>($"{Configuration["apiUrl"]}/home/upAndComing");
            receivedMovies = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }

}