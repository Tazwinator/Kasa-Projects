@page "/movie/{Id}"
@inject IJSRuntime JSRuntime


    @if (receivedData) {
        

        
        <div class="container">
            <div class="row">
                <!-- Page Content-->
                <div class="col-lg-8">

                    <!-- Left Side -->

                    <div class="card mb-4">
                        <div class="carousel-wrap">
                            <div class="owl-carousel standardCarousel">
                                <div class="item">
                                    <img class="card-img-top w-100 p-2 border-bottom-2" src="@($"https://www.themoviedb.org/t/p/original{JsonMovie.backdrop_path}")" alt="..." />
                                </div>

                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-4">
                                    <img class="card-img-top w-100" src="@($"https://www.themoviedb.org/t/p/original{JsonMovie.poster_path}")" alt="..." />
                                </div>
                                <div class="col-8 d-flex flex-column justify-content-between">
                                    <div class="d-flex justify-content-between">
                                        <div class="d-inline small text-muted">@Movie.ReleaseDate.Day/@Movie.ReleaseDate.Month/@Movie.ReleaseDate.Year</div>
                                        <div class="d-inline small text-muted text-end">@(Movie.Runtime) Minutes</div>
                                    </div>
                                    <div>
                                        <h2 class="card-title">@Movie.Title</h2>
                                        <p class="card-text">@Movie.Overview</p>
                                    </div>
                                    

                                    <div class="d-flex justify-content-between">
                                        <div class="align-self-center small">Language: <span class="text-muted"></span> @JsonMovie.original_language</div>
                                            <div>
                                                    
                                                @if (isFavourite)
                                                {
                                                    <button @onclick="RemoveMovieFromFavs" type="button" class="btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Remove movie from favourites"><h4 class="mb-0">
                                                        <Icon Style="color: #d40000;" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Times"></Icon></h4>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button @onclick="AddMovieToFavs" type="button" class="btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Add movie to favourites"><h4 class="mb-0">
                                                        <Icon TextColor="TextColor.Success" Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Plus"></Icon></h4>
                                                    </button>
                                                }

                                            </div>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    
                    @* left side widget for future use *@

                    @*<div class="row">
                        <div class="col-12">
                            
                            <div class="card mb-4">
                                <a href="#!"><img class="card-img-top" src="https://dummyimage.com/700x350/dee2e6/6c757d.jpg" alt="..." /></a>
                                <div class="card-body">
                                    <div class="small text-muted">January 1, 2022</div>
                                    <h2 class="card-title h4">Post Title</h2>
                                    <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis aliquid atque, nulla.</p>
                                    <a class="btn btn-primary" href="#!">Read more →</a>
                                </div>

                            </div>
                        </div>
                    </div>*@
                    
                    
                </div>

                <!-- Side widgets (Right side) -->
                <div class="col-lg-4">

                    <!-- Finances widget-->
                    
                    @if (Movie.Budget != null || Movie.Revenue != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header">Finances:</div>
                            <div class="card-body">
                                <div class="">
                                    <div class=""><strong>Budget:</strong> $@Movie.Budget</div>
                                    <div class=""><strong>Revenue:</strong> $@Movie.Revenue</div>
                                </div>
                            </div>
                        </div>
                    }
                        

                        <!-- Collections widget-->
                    @if (JsonMovie.belongs_to_collection != null)
                    {
                        <div class="card mb-4">
                        <div class="card-header">Production Companies</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6 d-flex justify-content-end">
                                        <img class="w-100" src="https://image.tmdb.org/t/p/original/@(JsonMovie.belongs_to_collection.poster_path)" />
                                    </div>
                                    <div class="col-6">
                                        <p>@JsonMovie.belongs_to_collection.name</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                
                    <!-- Genres widget -->
                    @if (JsonMovie.genres != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header">Genres</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 d-flex justify-content-start">
                                        <ul class="mb-0">
                                            @foreach (Genres genre in JsonMovie.genres)
                                            {
                                                <li class="mb-2">
                                                    <p class="d-inline" >@genre.name</p>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Production Companies widget -->
                    @if (JsonMovie.production_companies != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header">Production Companies</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 d-flex justify-content-start">
                                        <ul class="mb-0">
                                            @foreach (Production_Companies pCom in JsonMovie.production_companies)
                                            {
                                                @if (pCom.logo_path != null)
                                                {
                                                    <li>
                                                        <img class="d-inline w-25 mb-2" src="https://image.tmdb.org/t/p/original/@(pCom.logo_path)" alt="" height="25"/>
                                                        <p class="d-inline small" >@pCom.name</p>
                                                    </li>
                                                }

                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                    <!-- Production Countries widget -->
                    @if (JsonMovie.production_countries != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header">Production Countries</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 d-flex justify-content-start">
                                        <ul class="mb-0">
                                            @foreach (Production_Countries pCountry in JsonMovie.production_countries)
                                            {
                                                <li class="mb-2">
                                                    <p class="d-inline" >@pCountry.name</p>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Spoken Languages widget -->
                    @if (JsonMovie.spoken_languages != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header">Spoken Languages</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12 d-flex justify-content-start">
                                        <ul class="mb-0">
                                            @foreach (Spoken_Languages lang in JsonMovie.spoken_languages)
                                            {
                                                <li class="mb-2">
                                                    <p class="d-inline" >@lang.english_name (@lang.name)</p>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>

    <SnackbarStack @ref="snackbarStack" Location="SnackbarStackLocation.End" />

}
else
{
    <LoadingScreen />
}


@code {

    SnackbarStack snackbarStack;

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Inject]
    private HttpClient Http { get; set; }

    [Inject]
    NavigationManager NavManager { get; set; }

    [Inject]
    IConfiguration Configuration { get; set; }

    private MovieModel Movie { get; set; }

    private JsonMovie JsonMovie { get; set; }

    private TMDbUser User { get; set; }

    private bool receivedData = false;

    private bool isFavourite = false;

    [CascadingParameter(Name = "IdToken")]
    public string IdToken { get; set; }

    private JwtSecurityToken _idToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<MovieModel>($"{Configuration["apiUrl"]}/movie/{Id}");
            JsonMovie = await Http.GetFromJsonAsync<JsonMovie>($"https://api.themoviedb.org/3/movie/{result.ImdbId}?api_key={Configuration["externalTmdbApiKey"]}");
            Movie = result;
            Movie.Budget = string.Format("{0:n}", Convert.ToInt32(Movie.Budget));
            Movie.Revenue = string.Format("{0:n}", Convert.ToInt64(Movie.Revenue));
            Movie.Runtime = string.Format("{0:n0}", Convert.ToDecimal(Movie.Runtime));

            var user = (await AuthStat).User;
            if (user.Identity.IsAuthenticated)
            {
                var _idToken = new JwtSecurityTokenHandler().ReadJwtToken(IdToken);
                User = await Http.GetFromJsonAsync<TMDbUser>($"{Configuration["BlazorClientOidcSettings:AuthorityUrl"]}/User/getFullUser/{_idToken.Subject}");
                if (User.FavouriteMovies.SingleOrDefault(m => m.MovieId == Movie.Id) != null)
                {
                    isFavourite = true;
                }
            }

            receivedData = true;

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<string>("sliderFunctions.startStandardSlider", null);
    }

    async Task AddMovieToFavs()
    {
        var res = await Http.PostAsJsonAsync($"{Configuration["BlazorClientOidcSettings:AuthorityUrl"]}/User/AddMovieToFavs", new MovieTitle {MovieId = Movie.Id, TMDbUserId = User.Id, Title = Movie.Title});
        if (res.IsSuccessStatusCode)
        {
            await snackbarStack.PushAsync("Added to favourites!", SnackbarColor.Success, options => { options.IntervalBeforeClose = 3000; });
        }
        else
        {
            await snackbarStack.PushAsync("There has been an error. Contact support or wait a little while and try again.", SnackbarColor.Danger, options => { options.IntervalBeforeClose = 3000; });
        }
    }

    async Task RemoveMovieFromFavs() {
        
        var res = await Http.PostAsJsonAsync($"{Configuration["BlazorClientOidcSettings:AuthorityUrl"]}/User/RemoveMovieFromFavs", new MovieTitle {MovieId = Movie.Id, TMDbUserId = User.Id, Title = Movie.Title});
        if (res.IsSuccessStatusCode)
        {
            await snackbarStack.PushAsync("Removed from favourites!", SnackbarColor.Success, options => { options.IntervalBeforeClose = 3000; });
        }
        else
        {
            await snackbarStack.PushAsync("There has been an error. Contact support or wait a little while and try again.", SnackbarColor.Danger, options => { options.IntervalBeforeClose = 3000; });
        }

    }

}
