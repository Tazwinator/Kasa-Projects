@page "/search/{searchValue}"

<h3 class="mb-3">Your results for: @searchValue</h3>

<div class="container" >
    <div class="row">
        <div class="col-8">
            @if (receivedMovies) {
                <MovieColumn MovieData="MovieData" />
            }
            else
            {
                <LoadingScreen/>
            }
        </div>
        <div class="col-4">

        </div>
    </div>
</div>


@code {

    [Parameter]
    public string searchValue { get; set; }

    private string previousSearchValue { get; set; }

    [Inject]
    private HttpClient Http { get; set; }

    [Inject]
    NavigationManager NavManager { get; set; }

    [Inject]
    IConfiguration Configuration { get; set; }

    private MovieModel Movie { get; set; }
    private List<MovieModel> MovieData { get; set; }

    private bool receivedMovies = false;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<List<MovieModel>>($"{Configuration["apiUrl"]}/search/{searchValue}");
            previousSearchValue = searchValue;
            MovieData = result;
            receivedMovies = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }

}
